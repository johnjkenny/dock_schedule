services:
  proxy:
    image: proxy:latest
    build: /opt/dock-schedule/proxy
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    networks:
      - dock-schedule-proxy
    secrets:
      - ca_crt
      - proxy_crt
      - proxy_key
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ['CMD', 'pgrep', '-f', 'nginx -g daemon off']
      interval: 10s
      timeout: 5s
      retries: 3

  container_scraper:
    image: container_scraper:latest
    build: /opt/dock-schedule/container_scraper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - dock-schedule-proxy
    secrets:
      - ca_crt
      - container_scraper_crt
      - container_scraper_key
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ['CMD', 'pgrep', '-f', 'cadvisor']
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - prometheus-job=container-stats

  proxy_scraper:
    image: proxy_scraper:latest
    build: /opt/dock-schedule/proxy_scraper
    networks:
      - dock-schedule-proxy
    secrets:
      - ca_crt
      - proxy_scraper_crt
      - proxy_scraper_key
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ['CMD', 'pgrep', '-f', 'bin/nginx-prometheus-exporter']
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - prometheus-job=proxy-stats

  node_scraper:
    image: node_scraper:latest
    build: /opt/dock-schedule/node_scraper
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /run/udev/data:/run/udev/data
      - /:/rootfs:ro
    networks:
      - dock-schedule-proxy
    secrets:
      - ca_crt
      - node_scraper_crt
      - node_scraper_key
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ['CMD', 'pgrep', '-f', 'node_exporter']
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - prometheus-job=node-stats

  broker:
    image: broker:latest
    build: /opt/dock-schedule/broker
    volumes:
      - /opt/dock-schedule/broker/data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_NODENAME=rabbit@dschedule
    hostname: dschedule
    secrets:
      - broker_user
      - broker_passwd
      - broker_vhost
      - ca_crt
      - broker_crt
      - broker_key
    networks:
      - dock-schedule-proxy
      - dock-schedule-broker
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ['CMD', 'pgrep', '-f', 'rabbitmq-server']
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - prometheus-job=broker-stats

  prometheus:
    image: prometheus:latest
    build: /opt/dock-schedule/prometheus
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/dock-schedule/prometheus/data:/prometheus
      - /opt/dock-schedule/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - dock-schedule-proxy
    secrets:
      - ca_crt
      - prometheus_crt
      - prometheus_key
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ['CMD', 'pgrep', '-f', 'prometheus']
      interval: 10s
      timeout: 5s
      retries: 3

  grafana:
    image: grafana:latest
    environment:
      - GF_LIVE_ENABLED=false
    build: /opt/dock-schedule/grafana
    volumes:
      - /opt/dock-schedule/grafana/data:/var/lib/grafana
    networks:
      - dock-schedule-proxy
    secrets:
      - ca_crt
      - grafana_crt
      - grafana_key
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ['CMD', 'pgrep', '-f', 'grafana server']
      interval: 10s
      timeout: 5s
      retries: 3

  mongodb:
    image: mongodb:latest
    build: /opt/dock-schedule/mongodb
    volumes:
      - /opt/dock-schedule/mongodb/data:/data/db
    networks:
      - dock-schedule-job-db
      - dock-schedule-proxy
    secrets:
      - mongo_user
      - mongo_passwd
      - mongo_db
      - ca_crt
      - mongodb_crt
      - mongodb_key
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ['CMD', 'pgrep', '-f', 'docker-entrypoint.py mongod']
      interval: 10s
      timeout: 5s
      retries: 3

  mongodb_scraper:
    image: mongodb_scraper:latest
    build: /opt/dock-schedule/mongodb_scraper
    networks:
      - dock-schedule-job-db
      - dock-schedule-proxy
    secrets:
      - mongo_user
      - mongo_passwd
      - mongo_db
      - ca_crt
      - mongodb_scraper_crt
      - mongodb_scraper_key
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ['CMD', 'pgrep', '-f', 'bin/mongodb_exporter']
      interval: 10s
      timeout: 5s
      retries: 3
    labels:
      - prometheus-job=mongo-stats

  scheduler:
    image: scheduler:latest
    build: /opt/dock-schedule/scheduler
    volumes:
      - /opt/dock-schedule/jobs/crons.json:/app/crons.json
    networks:
      - dock-schedule-broker
      - dock-schedule-job-db
    secrets:
      - broker_user
      - broker_passwd
      - broker_vhost
      - mongo_user
      - mongo_passwd
      - mongo_db
      - ca_crt
      - scheduler_crt
      - scheduler_key
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ['CMD', 'pgrep', '-f', 'scheduler']
      interval: 10s
      timeout: 5s
      retries: 3

  worker:
    image: worker:latest
    build: /opt/dock-schedule/worker
    volumes:
      - /opt/dock-schedule/ansible:/app/ansible
      - /opt/dock-schedule/jobs:/app/jobs
      - /opt/dock-schedule/worker/worker.py:/app/worker.py
    networks:
      - dock-schedule-broker
      - dock-schedule-job-db
    secrets:
      - broker_user
      - broker_passwd
      - broker_vhost
      - mongo_user
      - mongo_passwd
      - mongo_db
      - ca_crt
      - worker_crt
      - worker_key
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    healthcheck:
      test: ['CMD', 'pgrep', '-f', 'worker']
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  dock-schedule-broker:
    name: dock-schedule-broker
    driver: overlay
    external: true
  dock-schedule-job-db:
    name: dock-schedule-job-db
    driver: overlay
    external: true
  dock-schedule-proxy:
    name: dock-schedule-proxy
    driver: overlay
    external: true

secrets:
  broker_user:
    external: true
  broker_passwd:
    external: true
  broker_vhost:
    external: true
  mongo_user:
    external: true
  mongo_passwd:
    external: true
  mongo_db:
    external: true
  ca_crt:
    file: /opt/dock-schedule/certs/dock-schedule-ca.crt
  broker_crt:
    file: /opt/dock-schedule/certs/broker.crt
  broker_key:
    file: /opt/dock-schedule/certs/broker.key
  container_scraper_crt:
    file: /opt/dock-schedule/certs/container_scraper.crt
  container_scraper_key:
    file: /opt/dock-schedule/certs/container_scraper.key
  grafana_crt:
    file: /opt/dock-schedule/certs/grafana.crt
  grafana_key:
    file: /opt/dock-schedule/certs/grafana.key
  mongodb_crt:
    file: /opt/dock-schedule/certs/mongodb.crt
  mongodb_key:
    file: /opt/dock-schedule/certs/mongodb.key
  mongodb_scraper_crt:
    file: /opt/dock-schedule/certs/mongodb_scraper.crt
  mongodb_scraper_key:
    file: /opt/dock-schedule/certs/mongodb_scraper.key
  node_scraper_crt:
    file: /opt/dock-schedule/certs/node_scraper.crt
  node_scraper_key:
    file: /opt/dock-schedule/certs/node_scraper.key
  prometheus_crt:
    file: /opt/dock-schedule/certs/prometheus.crt
  prometheus_key:
    file: /opt/dock-schedule/certs/prometheus.key
  proxy_crt:
    file: /opt/dock-schedule/certs/proxy.crt
  proxy_key:
    file: /opt/dock-schedule/certs/proxy.key
  proxy_scraper_crt:
    file: /opt/dock-schedule/certs/proxy_scraper.crt
  proxy_scraper_key:
    file: /opt/dock-schedule/certs/proxy_scraper.key
  scheduler_crt:
    file: /opt/dock-schedule/certs/scheduler.crt
  scheduler_key:
    file: /opt/dock-schedule/certs/scheduler.key
  worker_crt: 
    file: /opt/dock-schedule/certs/worker.crt
  worker_key:
    file: /opt/dock-schedule/certs/worker.key
